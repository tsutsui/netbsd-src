#!/bin/sh
#	$NetBSD: checkoldver,v 1.5 2024/05/29 13:35:12 christos Exp $
#
# Copyright (c) 2002 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Christos Zoulas.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# checkoldver [dir ...]
#
# Looks in the given directories for old shared libraries and lists them
# Useful for: 'checkoldver /usr/lib | xargs rm -f'

delete() {
	obsol="$1.so"
	if [ ! -z "$2" ]
	then
		obsol="$obsol.$2"
	fi
	if [ ! -z "$3" ]
	then
		obsol="$obsol.$3"
	fi
	if [ ! -z "$4" ]
	then
		obsol="$obsol.$4"
	fi
	printf "${PWD}/${obsol}\n"
}

comparelib() {
	local name="${1%.so.*}"
	local version="${1#"${name}"*.so.}"
	local IFS=.
	set -- $version

	if [ -z "$libmajor" ]
	then
		libname="$name"
		libmajor="$1"
		libminor="$2"
		libtiny="$3"
		return
	fi
	if [ "$libmajor" -lt "$1" ]
	then
		delete "$libname" "$libmajor" "$libminor" "$libtiny"
		libmajor="$1"
		libminor="$2"
		libtiny="$3"
		return
	elif [ "$1" -lt "$libmajor" ]
	then
		delete "$libname" "$1" "$2" "$3"
		return
	fi

	if [ -z "$libminor" ]
	then
		return
	fi
	if [ "$libminor" -lt "$2" ]
	then
		delete "$libname" "$libmajor" "$libminor" "$libtiny"
		libmajor="$1"
		libminor="$2"
		libtiny="$3"
		return
	elif [ "$2" -lt "$libminor" ]
	then
		delete "$libname" "$1" "$2" "$3"
		return
	fi

	if [ -z "$libtiny" ]
	then
		return
	fi
	if [ "$libtiny" -lt "$3" ]
	then
		delete "$libname" "$libmajor" "$libminor" "$libtiny"
		libmajor="$1"
		libminor="$2"
		libtiny="$3"
		return
	elif [ "$5" -lt "$libminor" ]
	then
		delete "$libname" "$1" "$2" "$3"
		return
	fi
}

processonedir() {
	cd "$1"
	for lib in lib*.so
	do
		lib="${lib#lib}"
		lib="${lib%.so}"

		libmajor=
		libminor=
		libtiny=
		for link in lib$lib.so.[0-9]*.[0-9]*.[0-9]*
		do
			comparelib "$link"
		done

		libmajor=
		libminor=
		libtiny=
		for link in lib$lib.so.[0-9]*.[0-9]*
		do
			comparelib "$link"
		done

		libmajor=
		libminor=
		libtiny=
		for link in lib$lib.so.[0-9]*
		do
			comparelib "$link"
		done
	done
}

for i
do
	processonedir "$i"
done
